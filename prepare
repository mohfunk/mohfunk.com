#!/usr/bin/env node

const {join} = require("path");
const {readFileSync, writeFileSync} = require("fs");

const init = () => {

    const construct = (str) => {
        const dir = join(__dirname, `./src/content/${str}/`);
        const files = require("shelljs").ls(dir).stdout.split('\n').filter(s => s !== '');
        const arr = [];
        for (var i = 0; i < files.length; i++) {
            const [ign, head, post] = readFileSync(join(dir, files[i]), (err, data) => data)
                .toString().split('---').map(e => e.split('\n').filter((s) => s !== ''));
            const [year, month, day] = head[0].split('.');
            const [srid, name] = files[i].split('.').map(e => e.split('_').join(' '))
            const [imp, label, copyrights, source, link] = head[1].split(' || ');
            const path = `../assets/img/${imp}.${imp.split('/')[0]}`
            const url = `https://${link}`
            arr.push({
                id: srid, title: name, date: { year, month, day },
                imag: { path, label, copyrights, source, url }, body: post
            });
        }
        return arr;
    }
    const main = () => {
        [ign, head, body] = readFileSync(join(__dirname,
            "./src/content/home.md"), (err, data) => data).toString().split('---').map(e => e.split('\n').filter((s) => s !== ''));  
        [title, sub, contacts, copyrights] = head;
        [mail, twitter, github] = contacts.split(' | ');
        return { title: title, sub: sub, contact: { mail: mail, twitter: twitter, github: github }, copyrights: head[3], about: body }   
    }
    writeFileSync('src/content.yml', require("yaml")
        .stringify(require("lodash")
            .reverse({
                home: main(),
                post: construct('post'),
                work: construct('work'),
            })));
}

init();
